play3d(s, duration=10)
movie3d(s, duration=10, dir="../Image/Integrated_plot", clean=FALSE, convert = TRUE, type = "gif")
rm(list=ls())
## setting working directory
setwd(
paste0(dirname(rstudioapi::getActiveDocumentContext()$path))
)
## install the required packages.
CRAN.packages <- c("readr","data.table","reshape2","dplyr","magrittr","igraph","sqldf","stringr","corrplot","ggplot2","ggrepel","limma")
bioconductor.packages <- c("biomaRt")
source("Functions/All_Functions.R")
install.packages.if.necessary(CRAN.packages,bioconductor.packages)
load(file="../Result/4. ANOVA_result/Significant.RData")
average_list <- data.frame(matrix(NA, ncol=0,nrow=dim(KM050217_merged)[1]))
run_order <- rbind(cbind(rep("Ovary",2),c("Igg","Tumor")),
cbind(rep("Liver",3),c("Igg","Normal","Tumor")),
cbind(rep("Colon",3),c("Igg","Normal","Tumor")))
average_list$id <- KM050217_merged$id
average_list$uniprotID <- KM050217_merged$uniprotID
for(i in unique(run_order[,1])){
df <- list_experiment[[i]]
df <- df[grepl("id|uniprotID|Tumor",colnames(df))]
df[,-(1:2)] <- df[grepl("Tumor",colnames(df))]/t(df[df[["id"]]=="LORF1",grepl("Tumor",colnames(df))])
df[["mean"]] <- apply(df[,-(1:2)],1,mean)
average_list[[paste0("Average.",i)]]<- df$mean[match(average_list$id,df$id)]
}
average_list[is.na(average_list)] <- 0
average_list[-(1:2)][average_list[-(1:2)]>1] <- 1
list_experiment[["Averaged.normalized"]]<- average_list
####################################################################################################################
### Draw venn diagram
venn_list <- list_experiment[["Averaged.normalized"]][-(1:2)]
venn_list[venn_list!=0] <- 1
png(filename="../Image/Integrated_plot/VennDiagram.png",width = 600, height = 600)
a <- vennCounts(venn_list)
dev.off()
vennDiagram(a,circle.col = c("darkmagenta", "darkblue",  "orange"), main="Comparison between expressed proteins")
###################################################################################################################
### Draw heatmap of average value for significant ones
heatmap_average <- list_experiment[["Averaged.normalized"]][(1:2)]
numerize<- function(x) ifelse(x=="Yes",1,0)
for(i in unique(run_order[,1])){
coln <- names(list_experiment)[grepl(i,names(list_experiment))&grepl("_",names(list_experiment))]
orlist <- list_experiment[[coln[1]]][,(1:2)]
for(j in coln){
orlist[[j]] <- list_experiment[[j]]$Significant
}
heatmap_average[[paste0("Average.",i)]] <- apply(orlist[-(1:2)],1,function(x) ifelse("Yes" %in% x,1,0))[match( heatmap_average$id,orlist$ID)]
}
heatmap_average[is.na(heatmap_average)]<-0
dl <- cbind(melt(heatmap_average%>%filter(uniprotID%in% Significant_list$uniprotID)), melt(average_list%>%filter(uniprotID%in% Significant_list$uniprotID))[-(1:3)]%>%rename("value.2"=value))
colnames(dl) <- c("Gene_Name","uniprotID","Tissues", "Significance","Expression")
sequence_length = length(unique(dl$Gene_Name))
first_sequence = c(1:(sequence_length%/%2))
second_sequence = c((sequence_length%/%2+1):sequence_length)
first_angles = c(90 - 180/length(first_sequence) * first_sequence)
second_angles = c(-90 - 180/length(second_sequence) * second_sequence)
png(filename="../Image/Integrated_plot/heatmap.png",width = 1000, height = 1000)
q <- ggplot(dl, aes(Tissues, Gene_Name)) +
geom_tile(aes(fill = Expression, alpha=Significance),color="gray35")+
scale_alpha(range = c(0.5, 1))+
scale_fill_gradient( limits=c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1),  low = "green4", high = "deeppink2")+
scale_y_discrete(position = "right")+
coord_polar(theta = "y")+
theme_bw()+
theme(axis.text.x = element_text(angle= c(first_angles,second_angles),size=12),
axis.text.y = element_text(size=15),
axis.title=element_text(size=16,face="bold"))
print(q)
dev.off()
###################################################################################################################
### MDS plot
dz <- average_list%>%filter(uniprotID%in% Significant_list$uniprotID)
rownames(dz) <- dz$id
d4 = dist(dz[-(1:2)])
fit4 = cmdscale(d4, eig=TRUE, k=3) #k is number of dimensions
fit4
dim1 = fit4$points[,1]
dim2 = fit4$points[,2]
dim3 = fit4$points[,3]
colfunc <- colorRampPalette(c("green4", "deeppink2"))
color <- data.frame(seq(10)/10,colfunc(10))
color <- color$colfunc.10.[match(round(dz$Average.Colon,1),color$seq.10..10)]
color <- colfunc[dz$Average.Colon]
library("rgl", lib.loc="~/R/win-library/3.5")
plot3d(dim1, dim2, dim3, type="s", size =2, lwd=4,col=color)
colfunc <- colorRampPalette(c("green4", "deeppink2"))
color <- data.frame(seq(10)/10,colfunc(10))
color <- color$colfunc.10.[match(round(dz$Average.Colon,1),color$seq.10..10)]
color <- colfunc[dz$Average.Colon]
plot3d(dim1, dim2, dim3, type="s", size =2, lwd=4,col=color)
text3d(dim1, dim2, dim3+0.08, rownames(dz), fontweight="bold", cex= 0.7, col="black")
s = spin3d(axis = c(0,0,1), rpm=3)
#play 3d
play3d(s, duration=10)
movie3d(s, duration=10, dir="../Image/Integrated_plot", clean=FALSE, convert = TRUE, type = "gif")
list_experiment[["Averaged.normalized"]][-(1:2)]
venn_list <- list_experiment[["Averaged.normalized"]][-(1:2)]
venn_list[venn_list!=0] <- 1
png(filename="../Image/Integrated_plot/VennDiagram.png",width = 600, height = 600)
a <- vennCounts(venn_list)
vennDiagram(a,circle.col = c("darkmagenta", "darkblue",  "orange"), main="Comparison between expressed proteins")
dev.off()
require(installr)
install.ImageMagick()
Sys.setenv(PATH = paste("C:/Program Files/ImageMagick-7.0.8-Q16/bin",
Sys.getenv("PATH"), sep = ";"))
#play 3d
play3d(s, duration=10)
movie3d(s, duration=10, dir="../Image/Integrated_plot", clean=FALSE, convert = TRUE, type = "gif")
install.ImageMagick()
library("plot3Drgl")
install.packages("plot3Drgl")
#play 3d
play3d(s, duration=10)
plotrgl()
library("plot3Drgl")
plotrgl()
rgl_init()
rgl.spheres(dim1, dim2, dim3, r = 0.2, color = color)
rgl.spheres(dim1, dim2, dim3, r = 0.1, color = color)
rgl.spheres(dim1, dim2, dim3, r = 1, color = color)
rgl.spheres(dim1, dim2, dim3, r = 0.01, color = color)
rgl.spheres(dim1, dim2, dim3, type="s", size =2,, color = color)
rgl.spheres(dim1, dim2, dim3,r=0.2, size =2,, color = color)
rgl.spheres(dim1, dim2, dim3,r=0.2, size =2,color = color)
rgl.spheres(dim1, dim2, dim3,r=0.4, size =2,color = color)
rgl.spheres(dim1, dim2, dim3,r=1, size =2,color = color)
rgl.spheres(dim1, dim2, dim3,r=0.1, size =2,color = color)
rgl.spheres(dim1, dim2, dim3,r=0, size =2,color = color)
rgl.spheres(dim1, dim2, dim3,r=0.01, size =2,color = color)
rgl.spheres(dim1, dim2, dim3,r=0.05, size =2,color = color)
rgl.spheres(dim1, dim2, dim3,r=0.08, size =2,color = color)
rgl.spheres(dim1, dim2, dim3,r=0.06, size =2,color = color)
rgl_add_axes(dim1, dim2, dim3, show.bbox = TRUE)
wire3d(ellips, col = "#D95F02",  lit = FALSE)
aspect3d(1,1,1)
rgl.spheres(dim1, dim2, dim3,r=0.05, size =2,color = color)
# Create a movie
movie3d(spin3d(axis = c(0, 0, 1)), duration = 3,
dir="../Image/Integrated_plot")
rgl.texts(dim1, dim2, dim3, rownames(dz))
rgl.texts(dim1, dim2, dim3, rownames(dz), color="black")
rgl.spheres(dim1, dim2, dim3,r=0.05, size =2,color = color)
rgl.texts(dim1, dim2, dim3, rownames(dz), col="black")
rgl.spheres(dim1, dim2, dim3,r=0.05, size =2,color = color)
rgl.texts(dim1, dim2, dim3, rownames(dz), col="black")
# Create a movie
movie3d(spin3d(axis = c(0, 0, 1)), duration = 3,
dir="../Image/Integrated_plot")
# Create a movie
movie3d(spin3d(axis = c(0, 0, 1)), duration = 10 ,convert=T,format="gif",
dir="../Image/Integrated_plot")
plot3d(dim1, dim2, dim3, type="s", size =2, lwd=4,col=color)
text3d(dim1, dim2, dim3+0.08, rownames(dz), fontweight="bold", cex= 0.7, col="black")
plot3d(dim1, dim2, dim3, type="s", size =2, lwd=4,col=color)
text3d(dim1, dim2, dim3+0.08, rownames(dz), fontweight="bold", cex= 0.7, col="black")
s = spin3d(axis = c(0,0,1), rpm=3)
?movie3d
# Create a movie
movie3d(spin3d(axis = c(0, 0, 1)), duration = 10 ,convert=T,type="gif",
dir="../Image/Integrated_plot")
path_to_convert = "\"C:\\Program Files\\ImageMagick-7.0.6-Q16\\magick.exe\""
movie3d(s, duration=10, dir="../Image/Integrated_plot", clean=FALSE, convert = path_to_convert, type = "gif")
movie3d(s, duration=10, dir="../Image/Integrated_plot", clean=FALSE, convert = path_to_convert, type = "gif")
path_to_convert = "/C://Program Files//ImageMagick-7.0.6-Q16//magick.exe/"
movie3d(s, duration=10, dir="../Image/Integrated_plot", clean=FALSE, convert = path_to_convert, type = "gif")
path_to_convert = "/C://Program Files//ImageMagick-7.0.8-Q16//magick.exe/"
movie3d(s, duration=10, dir="../Image/Integrated_plot", clean=FALSE, convert = path_to_convert, type = "gif")
path_to_convert = "/C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe/"
movie3d(s, duration=10, dir="../Image/Integrated_plot", clean=FALSE, convert = path_to_convert, type = "gif")
path_to_convert = "C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe"
movie3d(s, duration=10, dir="../Image/Integrated_plot", clean=FALSE, convert = path_to_convert, type = "gif")
s = spin3d(axis = c(0,0,1), rpm=3)
#play 3d
play3d(s, duration=10)
#play 3d
ff <- play3d(s, duration=10)
image_write(ff, "../Image/Integrated_plot/animation.gif")
library(gapminder)
library(ggplot2)
library(magick)
image_write(ff, "../Image/Integrated_plot/animation.gif")
#play 3d
ff <- play3d(s, duration=10)
library(animation)
gganimate(ff, interval=0.2, ani.options(convert = "C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe"))
library(animation)
gganimate(ff, interval=0.2, ani.options(convert = "C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe"))
devtools::install_github("dgrtwo/gganimate", ref = "v0.1.1”)
devtools::install_github("dgrtwo/gganimate", ref = "v0.1.1”)
ani.options(convert=shortPathName("C:\\Program Files\\ImageMagick-7.0.8-Q16\\magick.exe"))
movie3d(s, duration=10, dir="../Image/Integrated_plot", clean=FALSE, convert = T, type = "gif")
ani.options(convert=shortPathName("C:/Program Files/ImageMagick-7.0.8-Q16/magick.exe"))
movie3d(s, duration=10, dir="../Image/Integrated_plot", clean=FALSE, convert = T, type = "gif")
install.ImageMagick()
library("rgl", lib.loc="~/R/win-library/3.5")
library("magick", lib.loc="~/R/win-library/3.5")
plot3d(dim1, dim2, dim3, type="s", size =2, lwd=4,col=color)
text3d(dim1, dim2, dim3+0.08, rownames(dz), fontweight="bold", cex= 0.7, col="gray20")
text3d(dim1, dim2, dim3+0.08, rownames(dz), fontweight="bold", cex= 0.7, col="black")
s = spin3d(axis = c(0,0,1), rpm=3)
#play 3d
play3d(s, duration=10)
movie3d(s, duration=10, dir="../Image/Integrated_plot", clean=FALSE, convert = T, type = "gif")
rm(list=ls())
## setting working directory
setwd(
paste0(dirname(rstudioapi::getActiveDocumentContext()$path))
)
## install the required packages.
CRAN.packages <- c("readr","data.table","reshape2","dplyr","magrittr","igraph","sqldf","stringr","corrplot","ggplot2","ggrepel","limma")
bioconductor.packages <- c("biomaRt")
source("Functions/All_Functions.R")
install.packages.if.necessary(CRAN.packages,bioconductor.packages)
load(file="../Result/4. ANOVA_result/Significant.RData")
## Normalization consists of two stages:
##  1. Normalize intensities by LORF1 intensity
##  2. Take average of normalized intensity on all cases
run_order <- rbind(cbind(rep("Ovary",2),c("Igg","Tumor")),
cbind(rep("Liver",3),c("Igg","Normal","Tumor")),
cbind(rep("Colon",3),c("Igg","Normal","Tumor")))
average_list <- data.frame(matrix(NA, ncol=0,nrow=dim(KM050217_merged)[1]))
average_list$id <- KM050217_merged$id
average_list$uniprotID <- KM050217_merged$uniprotID
for(i in unique(run_order[,1])){
df <- list_experiment[[i]]
df <- df[grepl("id|uniprotID|Tumor",colnames(df))]
df[,-(1:2)] <- df[grepl("Tumor",colnames(df))]/t(df[df[["id"]]=="LORF1",grepl("Tumor",colnames(df))])
df[["mean"]] <- apply(df[,-(1:2)],1,mean)
average_list[[paste0("Average.",i)]]<- df$mean[match(average_list$id,df$id)]
}
average_list[is.na(average_list)] <- 0
average_list[-(1:2)][average_list[-(1:2)]>1] <- 1
list_experiment[["Averaged.normalized"]]<- average_list
####################################################################################################################
### Draw venn diagram
venn_list <- list_experiment[["Averaged.normalized"]][-(1:2)]
venn_list[venn_list!=0] <- 1
png(filename="../Image/Integrated_plot/VennDiagram.png",width = 600, height = 600)
a <- vennCounts(venn_list)
vennDiagram(a,circle.col = c("darkmagenta", "darkblue",  "orange"), main="Comparison between expressed proteins")
dev.off()
###################################################################################################################
### Draw heatmap of average value for significant ones
heatmap_average <- list_experiment[["Averaged.normalized"]][(1:2)]
numerize<- function(x) ifelse(x=="Yes",1,0)
for(i in unique(run_order[,1])){
coln <- names(list_experiment)[grepl(i,names(list_experiment))&grepl("_",names(list_experiment))]
orlist <- list_experiment[[coln[1]]][,(1:2)]
for(j in coln){
orlist[[j]] <- list_experiment[[j]]$Significant
}
heatmap_average[[paste0("Average.",i)]] <- apply(orlist[-(1:2)],1,function(x) ifelse("Yes" %in% x,1,0))[match( heatmap_average$id,orlist$ID)]
}
heatmap_average[is.na(heatmap_average)]<-0
dl <- cbind(melt(heatmap_average%>%filter(uniprotID%in% Significant_list$uniprotID)), melt(average_list%>%filter(uniprotID%in% Significant_list$uniprotID))[-(1:3)]%>%rename("value.2"=value))
colnames(dl) <- c("Gene_Name","uniprotID","Tissues", "Significance","Expression")
sequence_length = length(unique(dl$Gene_Name))
first_sequence = c(1:(sequence_length%/%2))
second_sequence = c((sequence_length%/%2+1):sequence_length)
first_angles = c(90 - 180/length(first_sequence) * first_sequence)
second_angles = c(-90 - 180/length(second_sequence) * second_sequence)
png(filename="../Image/Integrated_plot/heatmap.png",width = 1000, height = 1000)
q <- ggplot(dl, aes(Tissues, Gene_Name)) +
geom_tile(aes(fill = Expression, alpha=Significance),color="gray35")+
scale_alpha(range = c(0.5, 1))+
scale_fill_gradient( limits=c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1),  low = "green4", high = "deeppink2")+
scale_y_discrete(position = "right")+
coord_polar(theta = "y")+
theme_bw()+
theme(axis.text.x = element_text(angle= c(first_angles,second_angles),size=12),
axis.text.y = element_text(size=15),
axis.title=element_text(size=16,face="bold"))
print(q)
dev.off()
###################################################################################################################
### MDS plot
dz <- average_list%>%filter(uniprotID%in% Significant_list$uniprotID)
rownames(dz) <- dz$id
d4 = dist(dz[-(1:2)])
fit4 = cmdscale(d4, eig=TRUE, k=3) #k is number of dimensions
fit4
dim1 = fit4$points[,1]
dim2 = fit4$points[,2]
dim3 = fit4$points[,3]
colfunc <- colorRampPalette(c("green4", "deeppink2"))
color <- data.frame(seq(10)/10,colfunc(10))
color <- color$colfunc.10.[match(round(dz$Average.Colon,1),color$seq.10..10)]
plot3d(dim1, dim2, dim3, type="s", size =2, lwd=4,col=color)
text3d(dim1, dim2, dim3+0.08, rownames(dz), fontweight="bold", cex= 0.7, col="black")
#create a spinning object
s = spin3d(axis = c(0,0,1), rpm=3)
#play 3d
play3d(s, duration=10)
movie3d(s, duration=10, dir="../Image/Integrated_plot", clean=FALSE, convert = T, type = "gif")
library("rgl", lib.loc="~/R/win-library/3.5")
library("plot3Drgl", lib.loc="~/R/win-library/3.5")
movie3d(s, duration=10, dir="../Image/Integrated_plot", clean=FALSE, convert = T, type = "gif")
imconvertstring<-"\"c:\\Program Files\\ImageMagick-7.0.8-Q16\\convert.exe\" -delay 1x%d %s*.png %s.%s"
movie3d(s, duration=10, dir="../Image/Integrated_plot", clean=FALSE, convert = imconvertstring, type = "gif")
movie3d(s, duration=10, dir="../Image/Integrated_plot/mds.gif", clean=FALSE, convert = imconvertstring, type = "gif")
movie3d(s, duration=10, dir="../Image/Integrated_plot/", clean=FALSE, convert = imconvertstring, type = "gif")
movie3d(s, duration=15, dir="../Image/Integrated_plot/", clean=FALSE, convert = imconvertstring, type = "gif")
#play 3d
play3d(s, duration=15)
movie3d(s, duration=15, dir="../Image/Integrated_plot/", clean=FALSE, convert = imconvertstring, type = "gif")
movie3d(s, duration=15, dir="../Image/Integrated_plot/", clean=T, convert = imconvertstring, type = "gif")
movie3d(s, duration=15, dir="../Image/Integrated_plot/", clean=T, convert = imconvertstring, type = "gif")
save(KM050217_merged,Significant_proteins,Significant_list,list_experiment, file="../Result/5. Integrated_normalized_data/Normalized.RData")
q <- ggplot(dl, aes(Tissues, Gene_Name)) +
geom_tile(aes(fill = Expression, alpha=Significance),color="gray35")+
scale_alpha(range = c(0.5, 1))+
scale_fill_gradient( limits=c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1),  low = "green4", high = "deeppink2")+
scale_y_discrete(position = "right")+
coord_polar(theta = "y")+
theme_bw()+
theme(axis.text.x = element_text(angle= c(first_angles,second_angles),size=12),
axis.text.y = element_text(size=15),
axis.title=element_text(size=16,face="bold"))
q
q
q <- ggplot(dl, aes(Tissues, Gene_Name)) +
geom_tile(aes(fill = Expression),color="gray35")+
scale_alpha(range = c(0.5, 1))+
scale_fill_gradient( limits=c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1),  low = "green4", high = "deeppink2")+
scale_y_discrete(position = "right")+
coord_polar(theta = "y")+
theme_bw()+
theme(axis.text.x = element_text(angle= c(first_angles,second_angles),size=12),
axis.text.y = element_text(size=15),
axis.title=element_text(size=16,face="bold"))
q
head(dl)
ggplot(dl, aes(Tissues, Gene_Name)) +
geom_tile(aes(fill = Expression, alpha=Significance),color="gray35")+
scale_alpha(range = c(0.5, 1))+
scale_fill_gradient( limits=c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1),  low = "green4", high = "deeppink2")+
scale_y_discrete(position = "right")
ggplot(dl, aes(Tissues, Gene_Name)) +
geom_tile(aes(fill = Expression, alpha=Significance),color="gray35")+
scale_alpha(range = c(0.5, 1))+
scale_fill_gradient( limits=c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1),  low = "green4", high = "deeppink2")+
scale_y_discrete(position = "right")+
geom_tile(alpha=1-Significance, fill="gray")+
coord_polar(theta = "y")+
theme_bw()+
theme(axis.text.x = element_text(angle= c(first_angles,second_angles),size=12),
axis.text.y = element_text(size=15),
axis.title=element_text(size=16,face="bold"))
ggplot(dl, aes(Tissues, Gene_Name)) +
geom_tile(aes(fill = Expression, alpha=Significance),color="gray35")+
scale_alpha(range = c(0.5, 1))+
scale_fill_gradient( limits=c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1),  low = "green4", high = "deeppink2")+
scale_y_discrete(position = "right")+
geom_tile(alpha=(1-Significance), fill="gray")+
coord_polar(theta = "y")+
theme_bw()+
theme(axis.text.x = element_text(angle= c(first_angles,second_angles),size=12),
axis.text.y = element_text(size=15),
axis.title=element_text(size=16,face="bold"))
ggplot(dl, aes(Tissues, Gene_Name)) +
geom_tile(aes(fill = Expression, alpha=Significance),color="gray35")+
scale_alpha(range = c(0.5, 1))+
scale_fill_gradient( limits=c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1),  low = "green4", high = "deeppink2")+
scale_y_discrete(position = "right")+
geom_tile(alpha=(1-dl$Significance), fill="gray")+
coord_polar(theta = "y")+
theme_bw()+
theme(axis.text.x = element_text(angle= c(first_angles,second_angles),size=12),
axis.text.y = element_text(size=15),
axis.title=element_text(size=16,face="bold"))
ggplot(dl, aes(Tissues, Gene_Name)) +
geom_tile(aes(fill = Expression, alpha=Significance),color="gray35")+
scale_alpha(range = c(0.5, 0.8))+
scale_fill_gradient( limits=c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1),  low = "green4", high = "deeppink2")+
scale_y_discrete(position = "right")+
geom_tile(alpha=(1-dl$Significance), fill="gray")+
coord_polar(theta = "y")+
theme_bw()+
theme(axis.text.x = element_text(angle= c(first_angles,second_angles),size=12),
axis.text.y = element_text(size=15),
axis.title=element_text(size=16,face="bold"))
ggplot(dl, aes(Tissues, Gene_Name)) +
geom_tile(aes(fill = Expression, alpha=Significance),color="gray35")+
scale_alpha(range = c(0.5, 0.8))+
geom_tile(alpha=(1-dl$Significance), fill="gray")+
scale_fill_gradient( limits=c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1),  low = "green4", high = "deeppink2")+
scale_y_discrete(position = "right")+
coord_polar(theta = "y")+
theme_bw()+
theme(axis.text.x = element_text(angle= c(first_angles,second_angles),size=12),
axis.text.y = element_text(size=15),
axis.title=element_text(size=16,face="bold"))
1-dl$Significance
gplot(dl, aes(Tissues, Gene_Name)) +
geom_tile(aes(fill = Expression, alpha=Significance),color="gray35")+
scale_alpha(range = c(0.5, 0.8))+
geom_tile(alpha=(0.5-dl$Significance/2), fill="gray")+
scale_fill_gradient( limits=c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1),  low = "green4", high = "deeppink2")+
scale_y_discrete(position = "right")+
coord_polar(theta = "y")+
theme_bw()+
theme(axis.text.x = element_text(angle= c(first_angles,second_angles),size=12),
axis.text.y = element_text(size=15),
axis.title=element_text(size=16,face="bold"))
ggplot(dl, aes(Tissues, Gene_Name)) +
geom_tile(aes(fill = Expression, alpha=Significance),color="gray35")+
scale_alpha(range = c(0.5, 0.8))+
geom_tile(alpha=(0.5-dl$Significance/2), fill="gray")+
scale_fill_gradient( limits=c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1),  low = "green4", high = "deeppink2")+
scale_y_discrete(position = "right")+
coord_polar(theta = "y")+
theme_bw()+
theme(axis.text.x = element_text(angle= c(first_angles,second_angles),size=12),
axis.text.y = element_text(size=15),
axis.title=element_text(size=16,face="bold"))
ggplot(dl, aes(Tissues, Gene_Name)) +
geom_tile(aes(fill = Expression, alpha=Significance),color="gray35")+
scale_alpha(range = c(0.5, 1))+
geom_tile(alpha=(0.5-dl$Significance/2), fill="gray")+
scale_fill_gradient( limits=c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1),  low = "green4", high = "deeppink2")+
scale_y_discrete(position = "right")+
coord_polar(theta = "y")+
theme_bw()+
theme(axis.text.x = element_text(angle= c(first_angles,second_angles),size=12),
axis.text.y = element_text(size=15),
axis.title=element_text(size=16,face="bold"))
(0.5-dl$Significance/2)
dl$Significance/2
dl$Significance/2
ggplot(dl, aes(Tissues, Gene_Name)) +
geom_tile(aes(fill = Expression, alpha=Significance),color="gray35")+
scale_alpha(range = c(0.5, 1))+
geom_tile(alpha=(0.8-dl$Significance*5/4), fill="gray")+
scale_fill_gradient( limits=c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1),  low = "green4", high = "deeppink2")+
scale_y_discrete(position = "right")+
coord_polar(theta = "y")+
theme_bw()+
theme(axis.text.x = element_text(angle= c(first_angles,second_angles),size=12),
axis.text.y = element_text(size=15),
axis.title=element_text(size=16,face="bold"))
dl$Significance*(5/4)
ggplot(dl, aes(Tissues, Gene_Name)) +
geom_tile(aes(fill = Expression, alpha=Significance),color="gray35")+
scale_alpha(range = c(0.5, 1))+
geom_tile(alpha=0.8-dl$Significance*(4/5), fill="gray")+
scale_fill_gradient( limits=c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1),  low = "green4", high = "deeppink2")+
scale_y_discrete(position = "right")+
coord_polar(theta = "y")+
theme_bw()+
theme(axis.text.x = element_text(angle= c(first_angles,second_angles),size=12),
axis.text.y = element_text(size=15),
axis.title=element_text(size=16,face="bold"))
ggplot(dl, aes(Tissues, Gene_Name)) +
geom_tile(aes(fill = Expression, alpha=Significance),color="gray35")+
scale_alpha(range = c(0.5, 1))+
geom_tile(alpha=0.6-dl$Significance*(3/5), fill="gray")+
scale_fill_gradient( limits=c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1),  low = "green4", high = "deeppink2")+
scale_y_discrete(position = "right")+
coord_polar(theta = "y")+
theme_bw()+
theme(axis.text.x = element_text(angle= c(first_angles,second_angles),size=12),
axis.text.y = element_text(size=15),
axis.title=element_text(size=16,face="bold"))
ggplot(dl, aes(Tissues, Gene_Name)) +
geom_tile(aes(fill = Expression, alpha=Significance),color="gray35")+
scale_alpha(range = c(0.5, 1))+
geom_tile(alpha=0.6-dl$Significance*(3/5), fill="gray20")+
scale_fill_gradient( limits=c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1),  low = "green4", high = "deeppink2")+
scale_y_discrete(position = "right")+
coord_polar(theta = "y")+
theme_bw()+
theme(axis.text.x = element_text(angle= c(first_angles,second_angles),size=12),
axis.text.y = element_text(size=15),
axis.title=element_text(size=16,face="bold"))
ggplot(dl, aes(Tissues, Gene_Name)) +
geom_tile(aes(fill = Expression, alpha=Significance),color="gray35")+
scale_alpha(range = c(0.5, 1))+
geom_tile(alpha=0.6-dl$Significance*(3/5), fill="gray30")+
scale_fill_gradient( limits=c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1),  low = "green4", high = "deeppink2")+
scale_y_discrete(position = "right")+
coord_polar(theta = "y")+
theme_bw()+
theme(axis.text.x = element_text(angle= c(first_angles,second_angles),size=12),
axis.text.y = element_text(size=15),
axis.title=element_text(size=16,face="bold"))
ggplot(dl, aes(Tissues, Gene_Name)) +
geom_tile(aes(fill = Expression, alpha=Significance),color="gray35")+
scale_alpha(range = c(0.5, 1))+
geom_tile(alpha=0.6-dl$Significance*(3/5), fill="gray")+
scale_fill_gradient( limits=c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1),  low = "green4", high = "deeppink2")+
scale_y_discrete(position = "right")+
coord_polar(theta = "y")+
theme_bw()+
theme(axis.text.x = element_text(angle= c(first_angles,second_angles),size=12),
axis.text.y = element_text(size=15),
axis.title=element_text(size=16,face="bold"))
png(filename="../Image/Integrated_plot/heatmap.png",width = 1000, height = 1000)
q <- ggplot(dl, aes(Tissues, Gene_Name)) +
geom_tile(aes(fill = Expression, alpha=Significance),color="gray35")+
scale_alpha(range = c(0.5, 1))+
geom_tile(alpha=0.6-dl$Significance*(3/5), fill="gray")+
scale_fill_gradient( limits=c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1),  low = "green4", high = "deeppink2")+
scale_y_discrete(position = "right")+
coord_polar(theta = "y")+
theme_bw()+
theme(axis.text.x = element_text(angle= c(first_angles,second_angles),size=12),
axis.text.y = element_text(size=15),
axis.title=element_text(size=16,face="bold"))
print(q)
dev.off()
